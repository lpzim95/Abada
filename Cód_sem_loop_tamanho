#Setando o RNG
set.seed(20)

#Simulando os dados
garch.spec= garchSpec(model = list(ar = c(0.85,0.1), alpha = c(0.1, 0.1), beta = 0.5,omega = 0.05))
arch.sim = garchSim(garch.spec,n = 1000)
arch.sim.frame = as.data.frame(arch.sim)
acf(arch.sim)
plot.ts(arch.sim)

#Criando Grid
x= seq(1:1000)
y= seq(1:1000)
z = seq(1:1000)
furo.garch = as.data.frame(cbind(x,y,z,arch.sim))
coordinates(furo.garch)=~SS.1.1+SS.1.2+SS.1.3

#Análise estrutural
lzn.vgm.garch = variogram(furo.garch$garch~1, furo.garch,alpha = 0, width = 1,cutoff = 500,cressie = FALSE)
plot(lzn.vgm.garch)
furo.data.frame.garch = as.data.frame(cbind(furo.garch$SS.1.1,furo.garch$SS.1.2,furo.garch$SS.1.3,arch.sim))

#Função média e vari
media.vari = function (x) c(media = mean(x,na.rm = TRUE) ,vari = var(x, na.rm = TRUE))

#Composite
n=50
aux=1
aux2 = 1
acum = vector(,as.integer(length(arch.sim)))
acum.matrix = matrix(0,(as.integer(length(arch.sim))),4)
acum2 = 0

for (i in seq(from=1, to=length(arch.sim), by=n))
{
   aux2 = i
   
  if(i+n-1 <= length(arch.sim))
  {
    acum[aux] = sum(arch.sim[i:(i+(n-1))])
    acum.matrix[(i:(i+n-1)),1] = acum[aux]
    acum.matrix[(i:(i+n-1)),2] = aux
    acum.matrix[(i:(i+n-1)),3] = mean(arch.sim[i:(i+(n-1))])
    acum.matrix[(i:(i+n-1)),4] = var(arch.sim[i:(i+(n-1))])
  }
    
  else 
  {
    acum.matrix[((aux2+1):1000),1] = sum(arch.sim[(aux2+1):1000])
    acum.matrix[((aux2+1):1000),2] = aux
    acum.matrix[((aux2+1):1000),3] = mean(arch.sim[(aux2+1):1000])
    acum.matrix[((aux2+1):1000),4] = var(arch.sim[(aux2+1):1000])
  }
 
 aux=aux+1
}


acum.matrix.f = as.data.frame(cbind(acum.matrix,arch.sim))
View(acum.matrix.f)
sum.matrix = acum.matrix.f$SS.1
sum.matrix.deduped = as.data.frame(unique(acum.matrix.f$SS.1),col.names ="Somatório")
p4 = hist(sum.matrix.deduped$`unique(acum.matrix.f$SS.1)`, freq = FALSE)
plot(p1,col=rgb(1,0,0,1/4), freq = FALSE)
plot(p4,col=rgb(1,1/2,1/4,1/4), freq = FALSE, add = TRUE)

View(sum.matrix.deduped)


